.root {
  position: relative;
  height: auto;
  min-height: 72px;
  transition: all ease-in-out 120ms;

  &:focus,
  &:focus-within {
    outline: none;
    color: var(--primary);
  }
}

.post {
  display: flex;
  position: relative;
  padding: 0 var(--thread-pad-x);

  .left {
    display: flex;
    flex-direction: column;
    width: var(--thread-left-col);
    margin-right: var(--thread-left-gap);
    user-select: none;
    align-items: center;

    .ball {
      flex: 0 0 var(--thread-left-col);
      height: var(--thread-left-col);
      width: var(--thread-left-col);
      background: var(--border);
      border-radius: 0; /* flat, square bullet for consistency */
      user-select: none;
      position: relative;
      z-index: 1;
      transition: all ease-in-out 120ms;
      margin: 4px 0;

      &:hover {
        cursor: pointer;
        background: var(--bg-tertiary);
        filter: contrast(0.9);
      }

      &:active {
        background: var(--bg-secondary);
        transform: scale(0.8);
      }

      &.ai {
        display: flex;
        justify-content: center;
        align-items: center;
        color: var(--secondary);
        font-size: 10px;
        line-height: 1;
        font-weight: 500;

        .iconAI {
          height: 15px;
          width: 15px;
          fill: var(--bg);
          mix-blend-mode: luminosity;

          &.replying {
            animation: pulse 2s infinite;
          }

          @keyframes pulse {
            0% {
              transform: scale(0.8);
            }

            70% {
              transform: scale(1);
              opacity: 0.8;
            }

            100% {
              transform: scale(0.8);
            }
          }
        }
      }
    }

    .line {
      flex: 0 0 0;
      width: 0px;
      background: none;
      border: none;
      border-right: 2px solid var(--border);
      opacity: 0;
      transition: all ease-in-out 120ms;

      &.show {
        flex: 1 0 auto;
        opacity: 1;
        transition-delay: 15ms;
      }

      &.ai {
        border-right-style: dotted;
      }
    }
  }

  .right {
    margin: 8px 0;
    width: 100%;

    &.hasReplies {
      padding-bottom: 12px;
    }
  }

  .header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 4px var(--thread-pad-x);
    z-index: 2;
    pointer-events: none; /* container ignores events */

    .title {
      pointer-events: auto; /* allow selecting or interacting with title if needed */
    }

    .meta {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      margin-top: -3px;
      position: relative;
      z-index: 2; /* ensure header meta stays above other overlapping elements */

      .time {
        position: relative;
        z-index: 2;
        pointer-events: auto; /* clickable */
        color: var(--secondary);
        font-size: 0.9em;
        padding: 3px 5px;
        transition: all ease-in-out 120ms;
        border-radius: 6px;
        user-select: none;
        margin: 0 -5px;

        &:hover {
          cursor: pointer;
          background: var(--bg-secondary);
          color: var(--primary);
          opacity: 1;
        }

        &:focus {
          cursor: pointer;
          background: var(--bg-secondary);
          color: var(--primary);
          opacity: 1;
        }

        &:active {
          cursor: pointer;
          background: var(--bg-tertiary);
        }
      }
    }
  }

  /* push content below absolute header */
  .right { padding-top: 28px; }
  /* align left column (bullet) vertically with content start */
  .left { margin-top: 28px; }

  .editor {
    width: 100%;

    &.ai {
      color: var(--secondary);
    }
  }
}

.reply {
  .left {
    margin-top: 0; /* do not offset bullets for replies */
    .connector {
      margin-top: -30px;
      height: 48px;
      width: 2px;
      background: var(--border);
      transition: all ease-in-out 120ms;
      transition-delay: 120ms;
      opacity: 0;

      &.show {
        opacity: 1;
      }
    }
  }

  .right {
    margin-top: 8px; /* header is now relative; smaller offset */
  }
}

.actionsHolder {
  display: flex;
  height: auto; /* allow wrapping rows to grow */
  min-height: 40px;
  margin-top: 12px; /* spacing from thread above */
  margin-bottom: 14px; /* spacing from thread below */
  position: relative;
  z-index: 50; // Lift above nearby UI when window is narrow
  pointer-events: auto; // allow wheel/gesture events for horizontal scroll
}

/* when summary is visible and conversation is shown, indent conversation content further */
.withSummary {
  .right { padding-left: var(--summary-indent); }
  .left { margin-left: var(--summary-indent); }
  position: relative;
}

/* when summary thread is active, apply consistent gap and indent to replies as well */
.withSummaryThread {
  position: relative;

  .post.reply {
    .right { padding-left: var(--summary-indent); padding-top: 28px; }
    .left { margin-left: var(--summary-indent); margin-top: 28px; }
  }
}

.actions {
  display: flex;
  align-items: center;
  vertical-align: middle;
  width: 100%; /* occupy full row width so overflow is within this element */
  padding: 0 16px 0 var(--thread-left-gutter); /* align left dynamically */
  margin: 0 -5px;
  position: relative;
  z-index: 5; // keep below tags/popovers (tags use z>=20)
  pointer-events: auto; // enable interaction when visible
  flex-wrap: nowrap; // keep buttons on a single row
  overflow-x: auto; // enable horizontal scrolling on overflow
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch; // smooth scroll on iOS
  overscroll-behavior-x: contain; // keep horizontal gestures on this scroller
  touch-action: pan-x; // allow horizontal panning with touch/trackpad
  gap: 4px 6px;
  max-width: none;
  margin-left: 0;
  margin-right: 0;

  @media (max-width: 640px) {
    padding-left: var(--thread-left-gutter);
  }

  /* prevent children from shrinking so row can overflow */
  & > * { flex: 0 0 auto; }

  /* text-only actions: no separators between buttons */
  .openReply + .openReply { border-left: none; padding-left: 0; }

  .sep {
    margin: 0 5px 0 4px;
    color: var(--secondary);
    opacity: 0.25;
  }

  .openReply {
    display: inline-flex;
    align-items: center;
    font-size: 0.95em;
    user-select: none;
    padding: 0 6px;
    margin: 0 2px;
    transition: color 120ms ease;
    border-radius: 0;
    background: transparent !important;
    color: var(--base);
    line-height: 1.2;
    white-space: nowrap;
    border: none !important;

    &:hover,
    &:focus {
      cursor: pointer;
      color: var(--base-hover);
      text-decoration: underline;
      background: transparent !important;
    }

    &:disabled {
      color: var(--secondary);
      cursor: not-allowed; // Prevent pointer cursor
      pointer-events: none; // Disable any interactions (e.g., clicks)
      opacity: 0.5; // Reduce opacity to visually indicate it's disabled
    }

    .icon,
    .icon2 {
      display: inline-block; /* keep icons visible */
      height: 16px;
      width: 16px;
      margin-right: 6px;
      fill: currentColor;
    }

    &.confirmDelete { color: var(--base-red); text-decoration: underline; background: transparent !important; }

    &.loading { position: relative; }
    &.loading::before { content: none; }
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// Delete button for individual replies
.deleteReply {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: transparent;
  color: var(--secondary);
  transition: all ease-in-out 120ms;
  margin-left: 8px;
  
  &:hover {
    background: var(--bg-secondary);
    color: var(--base);
    cursor: pointer;
  }
  
  &:active {
    transform: scale(0.9);
  }
  
  &.confirmDelete {
    background: var(--base-red);
    color: white;
    
    &:hover {
      background: var(--base-red);
      filter: brightness(1.1);
      color: white;
    }
  }
  
  .deleteIcon {
    width: 14px;
    height: 14px;
    fill: currentColor;
  }
}
